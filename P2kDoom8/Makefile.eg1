# Script: Motorola P2K Makefile
# Flavor: EG1, EA1 (ElfPack v1.x, ARM GCC, Linux)
# Author: EXL, 06-Jan-2025

P2K_ELF_SDK       = /home/exl/Storage/Projects/Git/MotoFanRu/P2K-ELF-SDK
ARM_GCC_LIN_BIN   = $(P2K_ELF_SDK)/tool/compiler/ARM-GCC-LIN/bin

CC                = $(shell command -v arm-none-eabi-gcc || echo $(ARM_GCC_LIN_BIN)/arm-none-eabi-gcc)

QUALITY          ?= LOW
DEFINES_LOW       = -DVIEWWINDOWWIDTH=60
DEFINES_MID       = -DVIEWWINDOWWIDTH=120
DEFINES_HIGH      = -DVIEWWINDOWWIDTH=240 -DHIGH_DETAIL

PHONE            ?= E1
DEFINES_E1        = -DFPS=10 -DFTR_GFX_ATI -DROT_0 -DSET_DISPLAY_MODE
DEFINES_C650      = -DFPS=8  -DFTR_GFX_DAL -DKEYS_PORTRAIT -DFTR_V600 -DFTR_C650

SRC_DIR           = Source
OBJ_DIR           = $(SRC_DIR)/objs

INCLUDES          = -nostdinc -I$(P2K_ELF_SDK)/sdk -I$(P2K_ELF_SDK)/ep1/inc -Iinc -I.
INCLUDES         += -I$(SRC_DIR) -I$(SRC_DIR)/stubs_p2k
DEFINES           = -std=c99 -D__P2K__ -DP2K
DEFINES          += -DEP1 -DUSE_BIG_ENDIAN $(DEFINES_$(PHONE)) $(DEFINES_$(QUALITY))
DEFINES          += -DFLAT_SPAN -DC_ONLY
WARNINGS          = -Wall -Wextra
WARNINGS         += -Wno-sign-compare -Wno-implicit-fallthrough
OPTIMIZATIONS     = -Ofast -funroll-all-loops
FEATURES          = -ffreestanding -fshort-wchar -fshort-enums -fpack-struct=4 -fno-builtin -funsigned-char
ifeq ($(ARGON), 1)
	FLAVOR        = -DEA1
	CPU_FLAGS     = -mbig-endian -mthumb -mthumb-interwork -mbe32 -march=armv6j -mtune=arm1136jf-s
else
	FLAVOR        = -DEG1
	CPU_FLAGS     = -mbig-endian -mthumb -mthumb-interwork -march=armv4t -mtune=arm7tdmi-s
endif
AFLAGS            = -marm
CFLAGS            = $(INCLUDES) $(DEFINES) $(FLAVOR) $(WARNINGS) $(OPTIMIZATIONS) $(CPU_FLAGS) $(FEATURES)
CXXFLAGS          = $(CFLAGS)
LDFLAGS           = $(CFLAGS) -s -pie -Wl,--gc-sections -Wl,--allow-multiple-definition -Wl,-zmax-page-size=4 -Wl,-eRegister
LIBS              = -nostdlib -nodefaultlibs -L$(P2K_ELF_SDK)/ep1/lib/gcc -leg1_gcc_stub -L. -lgcc_gba_m

TARGET_ELF        = P2kDoom8_$(PHONE).elf

OBJS = \
	$(OBJ_DIR)/i_p2k.o \
	$(OBJ_DIR)/p_enemy2.o \
	$(OBJ_DIR)/p_map.o \
	$(OBJ_DIR)/p_maputl.o \
	$(OBJ_DIR)/p_mobj.o \
	$(OBJ_DIR)/p_sight.o \
	$(OBJ_DIR)/r_data.o \
	$(OBJ_DIR)/r_draw.o \
	$(OBJ_DIR)/r_plane.o \
	$(OBJ_DIR)/tables.o \
	$(OBJ_DIR)/w_wad.o \
	$(OBJ_DIR)/z_zone.o \
	$(OBJ_DIR)/am_map.o \
	$(OBJ_DIR)/d_items.o \
	$(OBJ_DIR)/d_main.o \
	$(OBJ_DIR)/f_finale.o \
	$(OBJ_DIR)/f_lib.o \
	$(OBJ_DIR)/g_game.o \
	$(OBJ_DIR)/hu_stuff.o \
	$(OBJ_DIR)/i_audio.o \
	$(OBJ_DIR)/i_main.o \
	$(OBJ_DIR)/i_system.o \
	$(OBJ_DIR)/info.o \
	$(OBJ_DIR)/m_cheat.o \
	$(OBJ_DIR)/m_menu.o \
	$(OBJ_DIR)/m_random.o \
	$(OBJ_DIR)/p_doors.o \
	$(OBJ_DIR)/p_enemy.o \
	$(OBJ_DIR)/p_floor.o \
	$(OBJ_DIR)/p_inter.o \
	$(OBJ_DIR)/p_lights.o \
	$(OBJ_DIR)/p_map.o \
	$(OBJ_DIR)/p_maputl.o \
	$(OBJ_DIR)/p_mobj.o \
	$(OBJ_DIR)/p_plats.o \
	$(OBJ_DIR)/p_pspr.o \
	$(OBJ_DIR)/p_setup.o \
	$(OBJ_DIR)/p_sight.o \
	$(OBJ_DIR)/p_spec.o \
	$(OBJ_DIR)/p_switch.o \
	$(OBJ_DIR)/p_telept.o \
	$(OBJ_DIR)/p_tick.o \
	$(OBJ_DIR)/p_user.o \
	$(OBJ_DIR)/r_sky.o \
	$(OBJ_DIR)/r_things.o \
	$(OBJ_DIR)/s_sound.o \
	$(OBJ_DIR)/sounds.o \
	$(OBJ_DIR)/st_pal.o \
	$(OBJ_DIR)/st_stuff.o \
	$(OBJ_DIR)/v_video.o \
	$(OBJ_DIR)/wi_lib.o \
	$(OBJ_DIR)/wi_stuff.o \
	$(OBJ_DIR)/z_bmallo.o

all: $(TARGET_ELF)

$(TARGET_ELF): $(OBJS)
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LDFLAGS) $(LIBS)

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -f $(OBJ_DIR)/*.o $(TARGET_ELF)

clean_objs:
	rm -f $(OBJ_DIR)/*.o

.PHONY: all clean clean_objs
